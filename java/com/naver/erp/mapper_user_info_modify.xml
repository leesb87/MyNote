<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.naver.erp.User_info_modifyDAO">
      
   
	<!--******************************************-->
	<!-- [사원 정보 ] 가져오는 select 태그 선언 -->
	<!--******************************************-->
	<select id ="getUser_info" parameterType= "String" resultType ="com.naver.erp.User_info_modifyDTO"> 
		select 
			user_no       				"user_no"
			,user_id      				"user_id"
			,pwd          				"pwd"
			,user_name    				"user_name"
			
			,addr         				"addr"
			
			,substr(jumin_num,1,6)		"jumin_num1"
			,substr(jumin_num,8,1)		"jumin_num2"
			
			,email						"email"
			
			,substr(tel_num,1,3)       "tel_num1"
			,substr(tel_num,5,4)       "tel_num2"
			,substr(tel_num,10,4)      "tel_num3"
			
			,reg_date     				"reg_date"
			
		 from user_info	
		 where 	user_id=#{user_id}
		
	</select>
	
	<!--******************************************-->
	<!--수정할 게시판의 DB가 존재하는지 존재 갯수를 리턴하는 select 문을 내포한 select 태그 선언 -->
	<!--******************************************-->
	<select id ="getUser_infoCnt" parameterType="com.naver.erp.User_info_modifyDTO" resultType="int">
		select count(*) from user_info where  user_id = #{user_id}
	</select>

	<!--******************************************-->
	<!-- 수정 실행하고 수정 적용행의 갯수를 리턴하는 select 태그 선언 -->
	<!--******************************************-->
	<update id ="update_user_info" parameterType="com.naver.erp.User_info_modifyDTO" >
		update user_info set 
			pwd			= #{pwd} 
			, user_name = #{user_name} 
			, email 	= #{email} 
			, tel_num 	= #{tel_num} 
			, addr 		= #{addr}  
		where user_id = #{user_id} 
		
	</update>
	
	
	<!--******************************************-->
	<!-- 중복개수체크하는 select 태그 선언 -->
	<!--******************************************-->
	<select id='getVerifyCnt' parameterType="hashmap" resultType="int">
		   
		select count(*) from
	
		<if test="check_for=='id_verify'">
		(
	  	  select user_id from user_info union select admin_id from admin
	    )
		</if>
		<if test="check_for=='name_verify'">
		(
	      select user_name from user_info union select admin_id from admin
	    )
		</if>
	     <if test="check_for=='jumin_verify'">
		(
	  	select user_id from user_info 
	   
		</if>
		<if test="check_for!='id_verify'">
		user_info
		</if>
		<if test="check_for=='id_verify'">
			where user_id=#{idJuminVal} 
		</if>
	    <if test="check_for=='name_verify'">
			where user_name=#{idJuminVal} 
		</if>
		
		<if test="check_for=='jumin_verify'">
			where jumin_num=#{idJuminVal}
			)
		</if>	
		<if test="check_for=='email_verify'">
			where email=#{idJuminVal}
		</if>	
	    <if test="check_for=='tel_verify'">
			where tel_num=#{idJuminVal}
		</if>	
	</select>
		
		
		
</mapper>









