<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.naver.erp.LoginDAO">
	
		<!--****************************************
		  [로그인 아이디, 암호의 존재개수] 검색하는 select문을 내포한 <select>태그 선언
		 =====================================================
		  <select>태그 속성 설명
		 =====================================================
		  Id = "getAdminCnt"	: SQL구문의 고유ID값 설정,
		   DAO클래스의 메소드 이름과 동일(검사도 실행한다.)
		  parameterType="hashmap" : SQL구문에 삽입될 외부데이터의 자료형 설정
		  resultType="int"		: SQL구문의 실행후 리턴값 자료형 설정
		  ====================================================
		  SQL 구문안의 #{HashMap객체키값명} 설명
		  ======================================
			  키값에 대응하는 데이터가 문자열을 삽입하라는 뜻이다.
			  만약 문자면 ''로 감싸 삽입하고 그렇지 않으면 그대로 삽입한다.		  	#{'HashMaP 객체의 키값'} 
		  ======================================
		  SQL구문 안의 ${HashMap객체키값명} 설명
		  ======================================
		  	  키값에 대응하는 데이터의 종류에 관계없이 '(싱글쿼트)' 없이 데이터를 그대로 삽입 
		*********************************************-->	
	<select id='getAdminIdCnt' parameterType="hashmap" resultType="int">
		select count(*) from admin where admin_id=#{id} and admin_pwd=#{pwd}
	</select>
	
	<!-- ************************************************************** 
	     [ 회원모드 로그인 아이디, 암호 존재의 개수]  검색하는 select문을 내포한 <select>태그 선언
         ************************************************************** -->	
    <select id='getUserinfoCnt' parameterType="hashmap" resultType="int">
		select count(*) from user_info where user_id=#{id} and pwd=#{pwd}
	</select>
	
	

	<!-- ************************************************************** 
	     [ 유저명을 갖고오는 ] select문을 내포한 <select>태그 선언
         ************************************************************** -->	
    <select id='getUser_name' parameterType="String" resultType="String">
		select user_name from user_info u1 inner join  user_access u2 on u1.user_no = u2.user_no
		where u1.user_id=#{id} 
	</select>
	
	
	
	
   	<!-- ************************************************************** 
	     [ 유저명을 갖고오는 ] select문을 내포한 <select>태그 선언
         ************************************************************** -->	
    <select id='getAcc_read' parameterType="String" resultType="String">
		select acc_read from user_info u1 inner join  user_access u2 on u1.user_no = u2.user_no
		where u1.user_id=#{id} 
	</select>
	
		<!-- ************************************************************** 
	     [ 유저명을 갖고오는 ] select문을 내포한 <select>태그 선언
         ************************************************************** -->	
    <select id='getAcc_upDel' parameterType="String" resultType="String">
		select acc_upDel from user_info u1 inner join  user_access u2 on u1.user_no = u2.user_no
		where u1.user_id=#{id} 
	</select>
	
		<!-- ************************************************************** 
	     [ 유저명을 갖고오는 ] select문을 내포한 <select>태그 선언
         ************************************************************** -->	
    <select id='getAcc_write' parameterType="String" resultType="String">
		select acc_write from user_info u1 inner join  user_access u2 on u1.user_no = u2.user_no
		where u1.user_id=#{id} 
	</select>

	
	
</mapper>